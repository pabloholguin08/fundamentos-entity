// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectef;

#nullable disable

namespace projectef.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20230902155841_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectef.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("3871496c-0a27-45f9-b3fe-e7342d33b982"),
                            Name = "Actividades Pendientes",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("3871496c-0a27-45f9-b3fe-e7342d33b9ef"),
                            Name = "Actividades Personales",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("projectef.Models.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("JobId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            JobId = new Guid("3871496c-0a27-45f9-b3fe-e7342d33b345"),
                            CategoryId = new Guid("3871496c-0a27-45f9-b3fe-e7342d33b982"),
                            CreationDate = new DateTime(2023, 9, 2, 10, 58, 41, 140, DateTimeKind.Local).AddTicks(1496),
                            JobPriority = 1,
                            Title = "Pago de Servicios Publicos"
                        },
                        new
                        {
                            JobId = new Guid("3871496c-0a27-45f9-b3fe-e7342d33c345"),
                            CategoryId = new Guid("3871496c-0a27-45f9-b3fe-e7342d33b9ef"),
                            CreationDate = new DateTime(2023, 9, 2, 10, 58, 41, 140, DateTimeKind.Local).AddTicks(1512),
                            JobPriority = 0,
                            Title = "Pago de Cuota Pase"
                        });
                });

            modelBuilder.Entity("projectef.Models.Job", b =>
                {
                    b.HasOne("projectef.Models.Category", "Category")
                        .WithMany("Jobs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectef.Models.Category", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
